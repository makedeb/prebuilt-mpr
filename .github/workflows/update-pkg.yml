# Update an MPR package.
name: update-pkg-boots
run-name: update-pkg-${{ inputs.pkgbase }}
on:
  workflow_dispatch:
    inputs:
      pkgbase:
        required: true
        type: string
      # A list of comma-separated distros to build for.
      distros:
        required: true
        type: string
permissions:
  id-token: write
  contents: read

jobs:
  get-distro-image-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Convert Comma-Separated Distro String into Distro Array
        id: set-matrix
        run: |
          # The comma-separated distro list, converted into an array.
          distro_list=($(echo "${{ inputs.distros }}" | sed 's|,|\n|g'))

          # The distro array, prepended with 'ubuntu-' for ubuntu-based distros and 'debian-' for debian-based distros.
          os_distro_list=()

          for distro in "${distro_list[@]}"; do
            if [[ "${distro}" == 'bullseye' ]]; then
              os_distro_list+=("debian-${distro}")
            else
              os_distro_list+=("ubuntu-${distro}")
            fi
          done
          distros_json="$(printf '%s\n' "${os_distro_list[@]}" | sed 's|.*|"&", |' | tr -d '\n' | sed 's|, $||' | sed 's|.*|[&]|')"
          echo "matrix=${distros_json}" >> "${GITHUB_OUTPUT}"
  update-pkg:
    runs-on: ubuntu-latest
    needs: get-distro-image-matrix
    container:
      image: proget.hunterwittenborn.com/docker/makedeb/makedeb:${{ matrix.distro-image }}
    strategy:
      fail-fast: false
      matrix:
        distro-image: ${{ fromJson(needs.get-distro-image-matrix.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set Up makedeb and Prebuilt-MPR APT Repositories
        uses: makedeb/setup-makedeb@main
        with:
          pbmpr-repo: true
      - name: Build Package
        run: cd pkg/ && makedeb -si --no-confirm
